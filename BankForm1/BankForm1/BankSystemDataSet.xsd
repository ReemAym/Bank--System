<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BankSystemDataSet" targetNamespace="http://tempuri.org/BankSystemDataSet.xsd" xmlns:mstns="http://tempuri.org/BankSystemDataSet.xsd" xmlns="http://tempuri.org/BankSystemDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BankSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BankSystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.BankForm1.Properties.Settings.GlobalReference.Default.BankSystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ACCOUNTTableAdapter" GeneratorDataComponentClassName="ACCOUNTTableAdapter" Name="ACCOUNT" UserDataComponentName="ACCOUNTTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.ACCOUNT" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ACCOUNT] WHERE (([ACCOUTNUMBER] = @Original_ACCOUTNUMBER) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([BALANCE] = @Original_BALANCE) AND ([TYPE] = @Original_TYPE))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_BALANCE" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="BALANCE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TYPE" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ACCOUNT] ([ACCOUTNUMBER], [BRANCHNUM], [BALANCE], [TYPE]) VALUES (@ACCOUTNUMBER, @BRANCHNUM, @BALANCE, @TYPE);
SELECT ACCOUTNUMBER, BRANCHNUM, BALANCE, TYPE FROM ACCOUNT WHERE (ACCOUTNUMBER = @ACCOUTNUMBER)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@BALANCE" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="BALANCE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TYPE" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ACCOUTNUMBER, BRANCHNUM, BALANCE, TYPE FROM dbo.ACCOUNT</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ACCOUNT] SET [ACCOUTNUMBER] = @ACCOUTNUMBER, [BRANCHNUM] = @BRANCHNUM, [BALANCE] = @BALANCE, [TYPE] = @TYPE WHERE (([ACCOUTNUMBER] = @Original_ACCOUTNUMBER) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([BALANCE] = @Original_BALANCE) AND ([TYPE] = @Original_TYPE));
SELECT ACCOUTNUMBER, BRANCHNUM, BALANCE, TYPE FROM ACCOUNT WHERE (ACCOUTNUMBER = @ACCOUTNUMBER)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@BALANCE" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="BALANCE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TYPE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_BALANCE" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="BALANCE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TYPE" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ACCOUTNUMBER" DataSetColumn="ACCOUTNUMBER" />
              <Mapping SourceColumn="BRANCHNUM" DataSetColumn="BRANCHNUM" />
              <Mapping SourceColumn="BALANCE" DataSetColumn="BALANCE" />
              <Mapping SourceColumn="TYPE" DataSetColumn="TYPE" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ADMINTableAdapter" GeneratorDataComponentClassName="ADMINTableAdapter" Name="ADMIN" UserDataComponentName="ADMINTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.ADMIN" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ADMIN] WHERE (([AFIRSTNAME] = @Original_AFIRSTNAME) AND ([ALASTNAME] = @Original_ALASTNAME) AND ([AID] = @Original_AID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ALASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ALASTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ADMIN] ([AFIRSTNAME], [ALASTNAME], [AID]) VALUES (@AFIRSTNAME, @ALASTNAME, @AID);
SELECT AFIRSTNAME, ALASTNAME, AID FROM ADMIN WHERE (AID = @AID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ALASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ALASTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AFIRSTNAME, ALASTNAME, AID FROM dbo.ADMIN</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ADMIN] SET [AFIRSTNAME] = @AFIRSTNAME, [ALASTNAME] = @ALASTNAME, [AID] = @AID WHERE (([AFIRSTNAME] = @Original_AFIRSTNAME) AND ([ALASTNAME] = @Original_ALASTNAME) AND ([AID] = @Original_AID));
SELECT AFIRSTNAME, ALASTNAME, AID FROM ADMIN WHERE (AID = @AID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ALASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ALASTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ALASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ALASTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AFIRSTNAME" DataSetColumn="AFIRSTNAME" />
              <Mapping SourceColumn="ALASTNAME" DataSetColumn="ALASTNAME" />
              <Mapping SourceColumn="AID" DataSetColumn="AID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BANKTableAdapter" GeneratorDataComponentClassName="BANKTableAdapter" Name="BANK" UserDataComponentName="BANKTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.BANK" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BANK] WHERE (([NAME] = @Original_NAME) AND ([CODE] = @Original_CODE) AND ([AID] = @Original_AID) AND ([ADDRESS] = @Original_ADDRESS))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BANK] ([NAME], [CODE], [AID], [ADDRESS]) VALUES (@NAME, @CODE, @AID, @ADDRESS);
SELECT NAME, CODE, AID, ADDRESS FROM BANK WHERE (CODE = @CODE)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT NAME, CODE, AID, ADDRESS FROM dbo.BANK</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BANK] SET [NAME] = @NAME, [CODE] = @CODE, [AID] = @AID, [ADDRESS] = @ADDRESS WHERE (([NAME] = @Original_NAME) AND ([CODE] = @Original_CODE) AND ([AID] = @Original_AID) AND ([ADDRESS] = @Original_ADDRESS));
SELECT NAME, CODE, AID, ADDRESS FROM BANK WHERE (CODE = @CODE)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="NAME" DataSetColumn="NAME" />
              <Mapping SourceColumn="CODE" DataSetColumn="CODE" />
              <Mapping SourceColumn="AID" DataSetColumn="AID" />
              <Mapping SourceColumn="ADDRESS" DataSetColumn="ADDRESS" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BRANCHTableAdapter" GeneratorDataComponentClassName="BRANCHTableAdapter" Name="BRANCH" UserDataComponentName="BRANCHTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.BRANCH" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BRANCH] WHERE (([ADDRESS] = @Original_ADDRESS) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([CODE] = @Original_CODE) AND ([AID] = @Original_AID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BRANCH] ([ADDRESS], [BRANCHNUM], [CODE], [AID]) VALUES (@ADDRESS, @BRANCHNUM, @CODE, @AID);
SELECT ADDRESS, BRANCHNUM, CODE, AID FROM BRANCH WHERE (BRANCHNUM = @BRANCHNUM)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ADDRESS, BRANCHNUM, CODE, AID FROM dbo.BRANCH</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BRANCH] SET [ADDRESS] = @ADDRESS, [BRANCHNUM] = @BRANCHNUM, [CODE] = @CODE, [AID] = @AID WHERE (([ADDRESS] = @Original_ADDRESS) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([CODE] = @Original_CODE) AND ([AID] = @Original_AID));
SELECT ADDRESS, BRANCHNUM, CODE, AID FROM BRANCH WHERE (BRANCHNUM = @BRANCHNUM)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_CODE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CODE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ADDRESS" DataSetColumn="ADDRESS" />
              <Mapping SourceColumn="BRANCHNUM" DataSetColumn="BRANCHNUM" />
              <Mapping SourceColumn="CODE" DataSetColumn="CODE" />
              <Mapping SourceColumn="AID" DataSetColumn="AID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CUSTOMERTableAdapter" GeneratorDataComponentClassName="CUSTOMERTableAdapter" Name="CUSTOMER" UserDataComponentName="CUSTOMERTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.CUSTOMER" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CUSTOMER] WHERE (([SSN] = @Original_SSN) AND ([ADDRESS] = @Original_ADDRESS) AND ([PHONE] = @Original_PHONE) AND ([FIRSTNAME] = @Original_FIRSTNAME) AND ([SECONDNAME] = @Original_SECONDNAME))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PHONE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PHONE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SECONDNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SECONDNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CUSTOMER] ([SSN], [ADDRESS], [PHONE], [FIRSTNAME], [SECONDNAME]) VALUES (@SSN, @ADDRESS, @PHONE, @FIRSTNAME, @SECONDNAME);
SELECT SSN, ADDRESS, PHONE, FIRSTNAME, SECONDNAME FROM CUSTOMER WHERE (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PHONE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PHONE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SECONDNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SECONDNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SSN, ADDRESS, PHONE, FIRSTNAME, SECONDNAME FROM dbo.CUSTOMER</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CUSTOMER] SET [SSN] = @SSN, [ADDRESS] = @ADDRESS, [PHONE] = @PHONE, [FIRSTNAME] = @FIRSTNAME, [SECONDNAME] = @SECONDNAME WHERE (([SSN] = @Original_SSN) AND ([ADDRESS] = @Original_ADDRESS) AND ([PHONE] = @Original_PHONE) AND ([FIRSTNAME] = @Original_FIRSTNAME) AND ([SECONDNAME] = @Original_SECONDNAME));
SELECT SSN, ADDRESS, PHONE, FIRSTNAME, SECONDNAME FROM CUSTOMER WHERE (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PHONE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PHONE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SECONDNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SECONDNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ADDRESS" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ADDRESS" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PHONE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PHONE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SECONDNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SECONDNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SSN" DataSetColumn="SSN" />
              <Mapping SourceColumn="ADDRESS" DataSetColumn="ADDRESS" />
              <Mapping SourceColumn="PHONE" DataSetColumn="PHONE" />
              <Mapping SourceColumn="FIRSTNAME" DataSetColumn="FIRSTNAME" />
              <Mapping SourceColumn="SECONDNAME" DataSetColumn="SECONDNAME" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DEALS_WITHTableAdapter" GeneratorDataComponentClassName="DEALS_WITHTableAdapter" Name="DEALS_WITH" UserDataComponentName="DEALS_WITHTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.DEALS_WITH" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DEALS_WITH] WHERE (([EID] = @Original_EID) AND ([SSN] = @Original_SSN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DEALS_WITH] ([EID], [SSN]) VALUES (@EID, @SSN);
SELECT EID, SSN FROM DEALS_WITH WHERE (EID = @EID) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EID, SSN FROM dbo.DEALS_WITH</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DEALS_WITH] SET [EID] = @EID, [SSN] = @SSN WHERE (([EID] = @Original_EID) AND ([SSN] = @Original_SSN));
SELECT EID, SSN FROM DEALS_WITH WHERE (EID = @EID) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EID" DataSetColumn="EID" />
              <Mapping SourceColumn="SSN" DataSetColumn="SSN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EMPLOYEETableAdapter" GeneratorDataComponentClassName="EMPLOYEETableAdapter" Name="EMPLOYEE" UserDataComponentName="EMPLOYEETableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.EMPLOYEE" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[EMPLOYEE] WHERE (([EFIRSTNAME] = @Original_EFIRSTNAME) AND ([EID] = @Original_EID) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([ELASTNAME] = @Original_ELASTNAME))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_EFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ELASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ELASTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[EMPLOYEE] ([EFIRSTNAME], [EID], [BRANCHNUM], [ELASTNAME]) VALUES (@EFIRSTNAME, @EID, @BRANCHNUM, @ELASTNAME);
SELECT EFIRSTNAME, EID, BRANCHNUM, ELASTNAME FROM EMPLOYEE WHERE (EID = @EID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@EFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ELASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ELASTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT EFIRSTNAME, EID, BRANCHNUM, ELASTNAME FROM dbo.EMPLOYEE</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[EMPLOYEE] SET [EFIRSTNAME] = @EFIRSTNAME, [EID] = @EID, [BRANCHNUM] = @BRANCHNUM, [ELASTNAME] = @ELASTNAME WHERE (([EFIRSTNAME] = @Original_EFIRSTNAME) AND ([EID] = @Original_EID) AND ([BRANCHNUM] = @Original_BRANCHNUM) AND ([ELASTNAME] = @Original_ELASTNAME));
SELECT EFIRSTNAME, EID, BRANCHNUM, ELASTNAME FROM EMPLOYEE WHERE (EID = @EID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@EFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ELASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ELASTNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_EFIRSTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="EFIRSTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ELASTNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ELASTNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EFIRSTNAME" DataSetColumn="EFIRSTNAME" />
              <Mapping SourceColumn="EID" DataSetColumn="EID" />
              <Mapping SourceColumn="BRANCHNUM" DataSetColumn="BRANCHNUM" />
              <Mapping SourceColumn="ELASTNAME" DataSetColumn="ELASTNAME" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="LOANTableAdapter" GeneratorDataComponentClassName="LOANTableAdapter" Name="LOAN" UserDataComponentName="LOANTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.LOAN" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[LOAN] WHERE (([LOANTYPE] = @Original_LOANTYPE) AND ([LOANAMOUNT] = @Original_LOANAMOUNT) AND ([LOANNUMBER] = @Original_LOANNUMBER) AND ([EID] = @Original_EID) AND ([BRANCHNUM] = @Original_BRANCHNUM))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LOANTYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LOANTYPE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_LOANAMOUNT" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="LOANAMOUNT" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[LOAN] ([LOANTYPE], [LOANAMOUNT], [LOANNUMBER], [EID], [BRANCHNUM]) VALUES (@LOANTYPE, @LOANAMOUNT, @LOANNUMBER, @EID, @BRANCHNUM);
SELECT LOANTYPE, LOANAMOUNT, LOANNUMBER, EID, BRANCHNUM FROM LOAN WHERE (LOANNUMBER = @LOANNUMBER)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LOANTYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LOANTYPE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@LOANAMOUNT" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="LOANAMOUNT" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT LOANTYPE, LOANAMOUNT, LOANNUMBER, EID, BRANCHNUM FROM dbo.LOAN</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[LOAN] SET [LOANTYPE] = @LOANTYPE, [LOANAMOUNT] = @LOANAMOUNT, [LOANNUMBER] = @LOANNUMBER, [EID] = @EID, [BRANCHNUM] = @BRANCHNUM WHERE (([LOANTYPE] = @Original_LOANTYPE) AND ([LOANAMOUNT] = @Original_LOANAMOUNT) AND ([LOANNUMBER] = @Original_LOANNUMBER) AND ([EID] = @Original_EID) AND ([BRANCHNUM] = @Original_BRANCHNUM));
SELECT LOANTYPE, LOANAMOUNT, LOANNUMBER, EID, BRANCHNUM FROM LOAN WHERE (LOANNUMBER = @LOANNUMBER)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LOANTYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LOANTYPE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@LOANAMOUNT" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="LOANAMOUNT" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LOANTYPE" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LOANTYPE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_LOANAMOUNT" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="LOANAMOUNT" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="LOANTYPE" DataSetColumn="LOANTYPE" />
              <Mapping SourceColumn="LOANAMOUNT" DataSetColumn="LOANAMOUNT" />
              <Mapping SourceColumn="LOANNUMBER" DataSetColumn="LOANNUMBER" />
              <Mapping SourceColumn="EID" DataSetColumn="EID" />
              <Mapping SourceColumn="BRANCHNUM" DataSetColumn="BRANCHNUM" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="OPENSTableAdapter" GeneratorDataComponentClassName="OPENSTableAdapter" Name="OPENS" UserDataComponentName="OPENSTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.OPENS" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[OPENS] WHERE (([SSN] = @Original_SSN) AND ([ACCOUTNUMBER] = @Original_ACCOUTNUMBER))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[OPENS] ([SSN], [ACCOUTNUMBER]) VALUES (@SSN, @ACCOUTNUMBER);
SELECT SSN, ACCOUTNUMBER FROM OPENS WHERE (ACCOUTNUMBER = @ACCOUTNUMBER) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SSN, ACCOUTNUMBER FROM dbo.OPENS</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[OPENS] SET [SSN] = @SSN, [ACCOUTNUMBER] = @ACCOUTNUMBER WHERE (([SSN] = @Original_SSN) AND ([ACCOUTNUMBER] = @Original_ACCOUTNUMBER));
SELECT SSN, ACCOUTNUMBER FROM OPENS WHERE (ACCOUTNUMBER = @ACCOUTNUMBER) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ACCOUTNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ACCOUTNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SSN" DataSetColumn="SSN" />
              <Mapping SourceColumn="ACCOUTNUMBER" DataSetColumn="ACCOUTNUMBER" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SERVESTableAdapter" GeneratorDataComponentClassName="SERVESTableAdapter" Name="SERVES" UserDataComponentName="SERVESTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.SERVES" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SERVES] WHERE (([BRANCHNUM] = @Original_BRANCHNUM) AND ([SSN] = @Original_SSN))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SERVES] ([BRANCHNUM], [SSN]) VALUES (@BRANCHNUM, @SSN);
SELECT BRANCHNUM, SSN FROM SERVES WHERE (BRANCHNUM = @BRANCHNUM) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BRANCHNUM, SSN FROM dbo.SERVES</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SERVES] SET [BRANCHNUM] = @BRANCHNUM, [SSN] = @SSN WHERE (([BRANCHNUM] = @Original_BRANCHNUM) AND ([SSN] = @Original_SSN));
SELECT BRANCHNUM, SSN FROM SERVES WHERE (BRANCHNUM = @BRANCHNUM) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BRANCHNUM" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BRANCHNUM" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BRANCHNUM" DataSetColumn="BRANCHNUM" />
              <Mapping SourceColumn="SSN" DataSetColumn="SSN" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TAKESTableAdapter" GeneratorDataComponentClassName="TAKESTableAdapter" Name="TAKES" UserDataComponentName="TAKESTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BankSystemConnectionString (Settings)" DbObjectName="BankSystem.dbo.TAKES" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TAKES] WHERE (([SSN] = @Original_SSN) AND ([LOANNUMBER] = @Original_LOANNUMBER))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TAKES] ([SSN], [LOANNUMBER]) VALUES (@SSN, @LOANNUMBER);
SELECT SSN, LOANNUMBER FROM TAKES WHERE (LOANNUMBER = @LOANNUMBER) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SSN, LOANNUMBER FROM dbo.TAKES</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TAKES] SET [SSN] = @SSN, [LOANNUMBER] = @LOANNUMBER WHERE (([SSN] = @Original_SSN) AND ([LOANNUMBER] = @Original_LOANNUMBER));
SELECT SSN, LOANNUMBER FROM TAKES WHERE (LOANNUMBER = @LOANNUMBER) AND (SSN = @SSN)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SSN" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SSN" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_LOANNUMBER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="LOANNUMBER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SSN" DataSetColumn="SSN" />
              <Mapping SourceColumn="LOANNUMBER" DataSetColumn="LOANNUMBER" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BankSystemDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="BankSystemDataSet" msprop:Generator_DataSetName="BankSystemDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ACCOUNT" msprop:Generator_RowEvHandlerName="ACCOUNTRowChangeEventHandler" msprop:Generator_RowDeletedName="ACCOUNTRowDeleted" msprop:Generator_RowDeletingName="ACCOUNTRowDeleting" msprop:Generator_RowEvArgName="ACCOUNTRowChangeEvent" msprop:Generator_TablePropName="ACCOUNT" msprop:Generator_RowChangedName="ACCOUNTRowChanged" msprop:Generator_RowChangingName="ACCOUNTRowChanging" msprop:Generator_TableClassName="ACCOUNTDataTable" msprop:Generator_RowClassName="ACCOUNTRow" msprop:Generator_TableVarName="tableACCOUNT" msprop:Generator_UserTableName="ACCOUNT">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ACCOUTNUMBER" msprop:Generator_ColumnPropNameInRow="ACCOUTNUMBER" msprop:Generator_ColumnPropNameInTable="ACCOUTNUMBERColumn" msprop:Generator_ColumnVarNameInTable="columnACCOUTNUMBER" msprop:Generator_UserColumnName="ACCOUTNUMBER" type="xs:int" />
              <xs:element name="BRANCHNUM" msprop:Generator_ColumnPropNameInRow="BRANCHNUM" msprop:Generator_ColumnPropNameInTable="BRANCHNUMColumn" msprop:Generator_ColumnVarNameInTable="columnBRANCHNUM" msprop:Generator_UserColumnName="BRANCHNUM" type="xs:int" />
              <xs:element name="BALANCE" msprop:Generator_ColumnPropNameInRow="BALANCE" msprop:Generator_ColumnPropNameInTable="BALANCEColumn" msprop:Generator_ColumnVarNameInTable="columnBALANCE" msprop:Generator_UserColumnName="BALANCE" type="xs:double" />
              <xs:element name="TYPE" msprop:Generator_ColumnPropNameInRow="TYPE" msprop:Generator_ColumnPropNameInTable="TYPEColumn" msprop:Generator_ColumnVarNameInTable="columnTYPE" msprop:Generator_UserColumnName="TYPE">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ADMIN" msprop:Generator_RowEvHandlerName="ADMINRowChangeEventHandler" msprop:Generator_RowDeletedName="ADMINRowDeleted" msprop:Generator_RowDeletingName="ADMINRowDeleting" msprop:Generator_RowEvArgName="ADMINRowChangeEvent" msprop:Generator_TablePropName="ADMIN" msprop:Generator_RowChangedName="ADMINRowChanged" msprop:Generator_RowChangingName="ADMINRowChanging" msprop:Generator_TableClassName="ADMINDataTable" msprop:Generator_RowClassName="ADMINRow" msprop:Generator_TableVarName="tableADMIN" msprop:Generator_UserTableName="ADMIN">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AFIRSTNAME" msprop:Generator_ColumnPropNameInRow="AFIRSTNAME" msprop:Generator_ColumnPropNameInTable="AFIRSTNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnAFIRSTNAME" msprop:Generator_UserColumnName="AFIRSTNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ALASTNAME" msprop:Generator_ColumnPropNameInRow="ALASTNAME" msprop:Generator_ColumnPropNameInTable="ALASTNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnALASTNAME" msprop:Generator_UserColumnName="ALASTNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AID" msprop:Generator_ColumnPropNameInRow="AID" msprop:Generator_ColumnPropNameInTable="AIDColumn" msprop:Generator_ColumnVarNameInTable="columnAID" msprop:Generator_UserColumnName="AID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BANK" msprop:Generator_RowEvHandlerName="BANKRowChangeEventHandler" msprop:Generator_RowDeletedName="BANKRowDeleted" msprop:Generator_RowDeletingName="BANKRowDeleting" msprop:Generator_RowEvArgName="BANKRowChangeEvent" msprop:Generator_TablePropName="BANK" msprop:Generator_RowChangedName="BANKRowChanged" msprop:Generator_RowChangingName="BANKRowChanging" msprop:Generator_TableClassName="BANKDataTable" msprop:Generator_RowClassName="BANKRow" msprop:Generator_TableVarName="tableBANK" msprop:Generator_UserTableName="BANK">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="NAME" msprop:Generator_ColumnPropNameInRow="NAME" msprop:Generator_ColumnPropNameInTable="NAMEColumn" msprop:Generator_ColumnVarNameInTable="columnNAME" msprop:Generator_UserColumnName="NAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CODE" msprop:Generator_ColumnPropNameInRow="CODE" msprop:Generator_ColumnPropNameInTable="CODEColumn" msprop:Generator_ColumnVarNameInTable="columnCODE" msprop:Generator_UserColumnName="CODE" type="xs:int" />
              <xs:element name="AID" msprop:Generator_ColumnPropNameInRow="AID" msprop:Generator_ColumnPropNameInTable="AIDColumn" msprop:Generator_ColumnVarNameInTable="columnAID" msprop:Generator_UserColumnName="AID" type="xs:int" />
              <xs:element name="ADDRESS" msprop:Generator_ColumnPropNameInRow="ADDRESS" msprop:Generator_ColumnPropNameInTable="ADDRESSColumn" msprop:Generator_ColumnVarNameInTable="columnADDRESS" msprop:Generator_UserColumnName="ADDRESS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BRANCH" msprop:Generator_RowEvHandlerName="BRANCHRowChangeEventHandler" msprop:Generator_RowDeletedName="BRANCHRowDeleted" msprop:Generator_RowDeletingName="BRANCHRowDeleting" msprop:Generator_RowEvArgName="BRANCHRowChangeEvent" msprop:Generator_TablePropName="BRANCH" msprop:Generator_RowChangedName="BRANCHRowChanged" msprop:Generator_RowChangingName="BRANCHRowChanging" msprop:Generator_TableClassName="BRANCHDataTable" msprop:Generator_RowClassName="BRANCHRow" msprop:Generator_TableVarName="tableBRANCH" msprop:Generator_UserTableName="BRANCH">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ADDRESS" msprop:Generator_ColumnPropNameInRow="ADDRESS" msprop:Generator_ColumnPropNameInTable="ADDRESSColumn" msprop:Generator_ColumnVarNameInTable="columnADDRESS" msprop:Generator_UserColumnName="ADDRESS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BRANCHNUM" msprop:Generator_ColumnPropNameInRow="BRANCHNUM" msprop:Generator_ColumnPropNameInTable="BRANCHNUMColumn" msprop:Generator_ColumnVarNameInTable="columnBRANCHNUM" msprop:Generator_UserColumnName="BRANCHNUM" type="xs:int" />
              <xs:element name="CODE" msprop:Generator_ColumnPropNameInRow="CODE" msprop:Generator_ColumnPropNameInTable="CODEColumn" msprop:Generator_ColumnVarNameInTable="columnCODE" msprop:Generator_UserColumnName="CODE" type="xs:int" />
              <xs:element name="AID" msprop:Generator_ColumnPropNameInRow="AID" msprop:Generator_ColumnPropNameInTable="AIDColumn" msprop:Generator_ColumnVarNameInTable="columnAID" msprop:Generator_UserColumnName="AID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CUSTOMER" msprop:Generator_RowEvHandlerName="CUSTOMERRowChangeEventHandler" msprop:Generator_RowDeletedName="CUSTOMERRowDeleted" msprop:Generator_RowDeletingName="CUSTOMERRowDeleting" msprop:Generator_RowEvArgName="CUSTOMERRowChangeEvent" msprop:Generator_TablePropName="CUSTOMER" msprop:Generator_RowChangedName="CUSTOMERRowChanged" msprop:Generator_RowChangingName="CUSTOMERRowChanging" msprop:Generator_TableClassName="CUSTOMERDataTable" msprop:Generator_RowClassName="CUSTOMERRow" msprop:Generator_TableVarName="tableCUSTOMER" msprop:Generator_UserTableName="CUSTOMER">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SSN" msprop:Generator_ColumnPropNameInRow="SSN" msprop:Generator_ColumnPropNameInTable="SSNColumn" msprop:Generator_ColumnVarNameInTable="columnSSN" msprop:Generator_UserColumnName="SSN" type="xs:int" />
              <xs:element name="ADDRESS" msprop:Generator_ColumnPropNameInRow="ADDRESS" msprop:Generator_ColumnPropNameInTable="ADDRESSColumn" msprop:Generator_ColumnVarNameInTable="columnADDRESS" msprop:Generator_UserColumnName="ADDRESS">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1024" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PHONE" msprop:Generator_ColumnPropNameInRow="PHONE" msprop:Generator_ColumnPropNameInTable="PHONEColumn" msprop:Generator_ColumnVarNameInTable="columnPHONE" msprop:Generator_UserColumnName="PHONE">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FIRSTNAME" msprop:Generator_ColumnPropNameInRow="FIRSTNAME" msprop:Generator_ColumnPropNameInTable="FIRSTNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnFIRSTNAME" msprop:Generator_UserColumnName="FIRSTNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SECONDNAME" msprop:Generator_ColumnPropNameInRow="SECONDNAME" msprop:Generator_ColumnPropNameInTable="SECONDNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnSECONDNAME" msprop:Generator_UserColumnName="SECONDNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DEALS_WITH" msprop:Generator_RowEvHandlerName="DEALS_WITHRowChangeEventHandler" msprop:Generator_RowDeletedName="DEALS_WITHRowDeleted" msprop:Generator_RowDeletingName="DEALS_WITHRowDeleting" msprop:Generator_RowEvArgName="DEALS_WITHRowChangeEvent" msprop:Generator_TablePropName="DEALS_WITH" msprop:Generator_RowChangedName="DEALS_WITHRowChanged" msprop:Generator_RowChangingName="DEALS_WITHRowChanging" msprop:Generator_TableClassName="DEALS_WITHDataTable" msprop:Generator_RowClassName="DEALS_WITHRow" msprop:Generator_TableVarName="tableDEALS_WITH" msprop:Generator_UserTableName="DEALS_WITH">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EID" msprop:Generator_ColumnPropNameInRow="EID" msprop:Generator_ColumnPropNameInTable="EIDColumn" msprop:Generator_ColumnVarNameInTable="columnEID" msprop:Generator_UserColumnName="EID" type="xs:int" />
              <xs:element name="SSN" msprop:Generator_ColumnPropNameInRow="SSN" msprop:Generator_ColumnPropNameInTable="SSNColumn" msprop:Generator_ColumnVarNameInTable="columnSSN" msprop:Generator_UserColumnName="SSN" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="EMPLOYEE" msprop:Generator_RowEvHandlerName="EMPLOYEERowChangeEventHandler" msprop:Generator_RowDeletedName="EMPLOYEERowDeleted" msprop:Generator_RowDeletingName="EMPLOYEERowDeleting" msprop:Generator_RowEvArgName="EMPLOYEERowChangeEvent" msprop:Generator_TablePropName="EMPLOYEE" msprop:Generator_RowChangedName="EMPLOYEERowChanged" msprop:Generator_RowChangingName="EMPLOYEERowChanging" msprop:Generator_TableClassName="EMPLOYEEDataTable" msprop:Generator_RowClassName="EMPLOYEERow" msprop:Generator_TableVarName="tableEMPLOYEE" msprop:Generator_UserTableName="EMPLOYEE">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EFIRSTNAME" msprop:Generator_ColumnPropNameInRow="EFIRSTNAME" msprop:Generator_ColumnPropNameInTable="EFIRSTNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnEFIRSTNAME" msprop:Generator_UserColumnName="EFIRSTNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="EID" msprop:Generator_ColumnPropNameInRow="EID" msprop:Generator_ColumnPropNameInTable="EIDColumn" msprop:Generator_ColumnVarNameInTable="columnEID" msprop:Generator_UserColumnName="EID" type="xs:int" />
              <xs:element name="BRANCHNUM" msprop:Generator_ColumnPropNameInRow="BRANCHNUM" msprop:Generator_ColumnPropNameInTable="BRANCHNUMColumn" msprop:Generator_ColumnVarNameInTable="columnBRANCHNUM" msprop:Generator_UserColumnName="BRANCHNUM" type="xs:int" />
              <xs:element name="ELASTNAME" msprop:Generator_ColumnPropNameInRow="ELASTNAME" msprop:Generator_ColumnPropNameInTable="ELASTNAMEColumn" msprop:Generator_ColumnVarNameInTable="columnELASTNAME" msprop:Generator_UserColumnName="ELASTNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="LOAN" msprop:Generator_RowEvHandlerName="LOANRowChangeEventHandler" msprop:Generator_RowDeletedName="LOANRowDeleted" msprop:Generator_RowDeletingName="LOANRowDeleting" msprop:Generator_RowEvArgName="LOANRowChangeEvent" msprop:Generator_TablePropName="LOAN" msprop:Generator_RowChangedName="LOANRowChanged" msprop:Generator_RowChangingName="LOANRowChanging" msprop:Generator_TableClassName="LOANDataTable" msprop:Generator_RowClassName="LOANRow" msprop:Generator_TableVarName="tableLOAN" msprop:Generator_UserTableName="LOAN">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="LOANTYPE" msprop:Generator_ColumnPropNameInRow="LOANTYPE" msprop:Generator_ColumnPropNameInTable="LOANTYPEColumn" msprop:Generator_ColumnVarNameInTable="columnLOANTYPE" msprop:Generator_UserColumnName="LOANTYPE">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LOANAMOUNT" msprop:Generator_ColumnPropNameInRow="LOANAMOUNT" msprop:Generator_ColumnPropNameInTable="LOANAMOUNTColumn" msprop:Generator_ColumnVarNameInTable="columnLOANAMOUNT" msprop:Generator_UserColumnName="LOANAMOUNT" type="xs:double" />
              <xs:element name="LOANNUMBER" msprop:Generator_ColumnPropNameInRow="LOANNUMBER" msprop:Generator_ColumnPropNameInTable="LOANNUMBERColumn" msprop:Generator_ColumnVarNameInTable="columnLOANNUMBER" msprop:Generator_UserColumnName="LOANNUMBER" type="xs:int" />
              <xs:element name="EID" msprop:Generator_ColumnPropNameInRow="EID" msprop:Generator_ColumnPropNameInTable="EIDColumn" msprop:Generator_ColumnVarNameInTable="columnEID" msprop:Generator_UserColumnName="EID" type="xs:int" />
              <xs:element name="BRANCHNUM" msprop:Generator_ColumnPropNameInRow="BRANCHNUM" msprop:Generator_ColumnPropNameInTable="BRANCHNUMColumn" msprop:Generator_ColumnVarNameInTable="columnBRANCHNUM" msprop:Generator_UserColumnName="BRANCHNUM" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="OPENS" msprop:Generator_RowEvHandlerName="OPENSRowChangeEventHandler" msprop:Generator_RowDeletedName="OPENSRowDeleted" msprop:Generator_RowDeletingName="OPENSRowDeleting" msprop:Generator_RowEvArgName="OPENSRowChangeEvent" msprop:Generator_TablePropName="OPENS" msprop:Generator_RowChangedName="OPENSRowChanged" msprop:Generator_RowChangingName="OPENSRowChanging" msprop:Generator_TableClassName="OPENSDataTable" msprop:Generator_RowClassName="OPENSRow" msprop:Generator_TableVarName="tableOPENS" msprop:Generator_UserTableName="OPENS">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SSN" msprop:Generator_ColumnPropNameInRow="SSN" msprop:Generator_ColumnPropNameInTable="SSNColumn" msprop:Generator_ColumnVarNameInTable="columnSSN" msprop:Generator_UserColumnName="SSN" type="xs:int" />
              <xs:element name="ACCOUTNUMBER" msprop:Generator_ColumnPropNameInRow="ACCOUTNUMBER" msprop:Generator_ColumnPropNameInTable="ACCOUTNUMBERColumn" msprop:Generator_ColumnVarNameInTable="columnACCOUTNUMBER" msprop:Generator_UserColumnName="ACCOUTNUMBER" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SERVES" msprop:Generator_RowEvHandlerName="SERVESRowChangeEventHandler" msprop:Generator_RowDeletedName="SERVESRowDeleted" msprop:Generator_RowDeletingName="SERVESRowDeleting" msprop:Generator_RowEvArgName="SERVESRowChangeEvent" msprop:Generator_TablePropName="SERVES" msprop:Generator_RowChangedName="SERVESRowChanged" msprop:Generator_RowChangingName="SERVESRowChanging" msprop:Generator_TableClassName="SERVESDataTable" msprop:Generator_RowClassName="SERVESRow" msprop:Generator_TableVarName="tableSERVES" msprop:Generator_UserTableName="SERVES">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BRANCHNUM" msprop:Generator_ColumnPropNameInRow="BRANCHNUM" msprop:Generator_ColumnPropNameInTable="BRANCHNUMColumn" msprop:Generator_ColumnVarNameInTable="columnBRANCHNUM" msprop:Generator_UserColumnName="BRANCHNUM" type="xs:int" />
              <xs:element name="SSN" msprop:Generator_ColumnPropNameInRow="SSN" msprop:Generator_ColumnPropNameInTable="SSNColumn" msprop:Generator_ColumnVarNameInTable="columnSSN" msprop:Generator_UserColumnName="SSN" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TAKES" msprop:Generator_RowEvHandlerName="TAKESRowChangeEventHandler" msprop:Generator_RowDeletedName="TAKESRowDeleted" msprop:Generator_RowDeletingName="TAKESRowDeleting" msprop:Generator_RowEvArgName="TAKESRowChangeEvent" msprop:Generator_TablePropName="TAKES" msprop:Generator_RowChangedName="TAKESRowChanged" msprop:Generator_RowChangingName="TAKESRowChanging" msprop:Generator_TableClassName="TAKESDataTable" msprop:Generator_RowClassName="TAKESRow" msprop:Generator_TableVarName="tableTAKES" msprop:Generator_UserTableName="TAKES">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SSN" msprop:Generator_ColumnPropNameInRow="SSN" msprop:Generator_ColumnPropNameInTable="SSNColumn" msprop:Generator_ColumnVarNameInTable="columnSSN" msprop:Generator_UserColumnName="SSN" type="xs:int" />
              <xs:element name="LOANNUMBER" msprop:Generator_ColumnPropNameInRow="LOANNUMBER" msprop:Generator_ColumnPropNameInTable="LOANNUMBERColumn" msprop:Generator_ColumnVarNameInTable="columnLOANNUMBER" msprop:Generator_UserColumnName="LOANNUMBER" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ACCOUNT" />
      <xs:field xpath="mstns:ACCOUTNUMBER" />
    </xs:unique>
    <xs:unique name="ADMIN_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ADMIN" />
      <xs:field xpath="mstns:AID" />
    </xs:unique>
    <xs:unique name="BANK_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BANK" />
      <xs:field xpath="mstns:CODE" />
    </xs:unique>
    <xs:unique name="BRANCH_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BRANCH" />
      <xs:field xpath="mstns:BRANCHNUM" />
    </xs:unique>
    <xs:unique name="CUSTOMER_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CUSTOMER" />
      <xs:field xpath="mstns:SSN" />
    </xs:unique>
    <xs:unique name="DEALS_WITH_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DEALS_WITH" />
      <xs:field xpath="mstns:EID" />
      <xs:field xpath="mstns:SSN" />
    </xs:unique>
    <xs:unique name="EMPLOYEE_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EMPLOYEE" />
      <xs:field xpath="mstns:EID" />
    </xs:unique>
    <xs:unique name="LOAN_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:LOAN" />
      <xs:field xpath="mstns:LOANNUMBER" />
    </xs:unique>
    <xs:unique name="OPENS_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:OPENS" />
      <xs:field xpath="mstns:SSN" />
      <xs:field xpath="mstns:ACCOUTNUMBER" />
    </xs:unique>
    <xs:unique name="SERVES_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SERVES" />
      <xs:field xpath="mstns:BRANCHNUM" />
      <xs:field xpath="mstns:SSN" />
    </xs:unique>
    <xs:unique name="TAKES_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TAKES" />
      <xs:field xpath="mstns:SSN" />
      <xs:field xpath="mstns:LOANNUMBER" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ACCOUNT_HAS_BRANCH" msdata:parent="BRANCH" msdata:child="ACCOUNT" msdata:parentkey="BRANCHNUM" msdata:childkey="BRANCHNUM" msprop:Generator_UserParentTable="BRANCH" msprop:Generator_UserChildTable="ACCOUNT" msprop:Generator_RelationVarName="relationFK_ACCOUNT_HAS_BRANCH" msprop:Generator_UserRelationName="FK_ACCOUNT_HAS_BRANCH" msprop:Generator_ChildPropName="GetACCOUNTRows" msprop:Generator_ParentPropName="BRANCHRow" />
      <msdata:Relationship name="FK_BANK_CREATES_ADMIN" msdata:parent="ADMIN" msdata:child="BANK" msdata:parentkey="AID" msdata:childkey="AID" msprop:Generator_UserParentTable="ADMIN" msprop:Generator_UserChildTable="BANK" msprop:Generator_RelationVarName="relationFK_BANK_CREATES_ADMIN" msprop:Generator_ChildPropName="GetBANKRows" msprop:Generator_ParentPropName="ADMINRow" msprop:Generator_UserRelationName="FK_BANK_CREATES_ADMIN" />
      <msdata:Relationship name="FK_BRANCH_APPENDS_ADMIN" msdata:parent="ADMIN" msdata:child="BRANCH" msdata:parentkey="AID" msdata:childkey="AID" msprop:Generator_UserParentTable="ADMIN" msprop:Generator_UserChildTable="BRANCH" msprop:Generator_RelationVarName="relationFK_BRANCH_APPENDS_ADMIN" msprop:Generator_ChildPropName="GetBRANCHRows" msprop:Generator_ParentPropName="ADMINRow" msprop:Generator_UserRelationName="FK_BRANCH_APPENDS_ADMIN" />
      <msdata:Relationship name="FK_BRANCH_OWNS_BANK" msdata:parent="BANK" msdata:child="BRANCH" msdata:parentkey="CODE" msdata:childkey="CODE" msprop:Generator_UserParentTable="BANK" msprop:Generator_UserChildTable="BRANCH" msprop:Generator_RelationVarName="relationFK_BRANCH_OWNS_BANK" msprop:Generator_ChildPropName="GetBRANCHRows" msprop:Generator_ParentPropName="BANKRow" msprop:Generator_UserRelationName="FK_BRANCH_OWNS_BANK" />
      <msdata:Relationship name="FK_DEALS_WI_DEALS_WIT_CUSTOMER" msdata:parent="CUSTOMER" msdata:child="DEALS_WITH" msdata:parentkey="SSN" msdata:childkey="SSN" msprop:Generator_UserParentTable="CUSTOMER" msprop:Generator_UserChildTable="DEALS_WITH" msprop:Generator_RelationVarName="relationFK_DEALS_WI_DEALS_WIT_CUSTOMER" msprop:Generator_ChildPropName="GetDEALS_WITHRows" msprop:Generator_ParentPropName="CUSTOMERRow" msprop:Generator_UserRelationName="FK_DEALS_WI_DEALS_WIT_CUSTOMER" />
      <msdata:Relationship name="FK_DEALS_WI_DEALS_WIT_EMPLOYEE" msdata:parent="EMPLOYEE" msdata:child="DEALS_WITH" msdata:parentkey="EID" msdata:childkey="EID" msprop:Generator_UserParentTable="EMPLOYEE" msprop:Generator_UserChildTable="DEALS_WITH" msprop:Generator_RelationVarName="relationFK_DEALS_WI_DEALS_WIT_EMPLOYEE" msprop:Generator_UserRelationName="FK_DEALS_WI_DEALS_WIT_EMPLOYEE" msprop:Generator_ChildPropName="GetDEALS_WITHRows" msprop:Generator_ParentPropName="EMPLOYEERow" />
      <msdata:Relationship name="FK_EMPLOYEE_WORKS_BRANCH" msdata:parent="BRANCH" msdata:child="EMPLOYEE" msdata:parentkey="BRANCHNUM" msdata:childkey="BRANCHNUM" msprop:Generator_UserParentTable="BRANCH" msprop:Generator_UserChildTable="EMPLOYEE" msprop:Generator_RelationVarName="relationFK_EMPLOYEE_WORKS_BRANCH" msprop:Generator_ChildPropName="GetEMPLOYEERows" msprop:Generator_ParentPropName="BRANCHRow" msprop:Generator_UserRelationName="FK_EMPLOYEE_WORKS_BRANCH" />
      <msdata:Relationship name="FK_LOAN_ADDS_EMPLOYEE" msdata:parent="EMPLOYEE" msdata:child="LOAN" msdata:parentkey="EID" msdata:childkey="EID" msprop:Generator_UserParentTable="EMPLOYEE" msprop:Generator_UserChildTable="LOAN" msprop:Generator_RelationVarName="relationFK_LOAN_ADDS_EMPLOYEE" msprop:Generator_ChildPropName="GetLOANRows" msprop:Generator_ParentPropName="EMPLOYEERow" msprop:Generator_UserRelationName="FK_LOAN_ADDS_EMPLOYEE" />
      <msdata:Relationship name="FK_LOAN_OFFERS_BRANCH" msdata:parent="BRANCH" msdata:child="LOAN" msdata:parentkey="BRANCHNUM" msdata:childkey="BRANCHNUM" msprop:Generator_UserParentTable="BRANCH" msprop:Generator_UserChildTable="LOAN" msprop:Generator_RelationVarName="relationFK_LOAN_OFFERS_BRANCH" msprop:Generator_ChildPropName="GetLOANRows" msprop:Generator_ParentPropName="BRANCHRow" msprop:Generator_UserRelationName="FK_LOAN_OFFERS_BRANCH" />
      <msdata:Relationship name="FK_OPENS_OPENS_CUSTOMER" msdata:parent="CUSTOMER" msdata:child="OPENS" msdata:parentkey="SSN" msdata:childkey="SSN" msprop:Generator_UserParentTable="CUSTOMER" msprop:Generator_UserChildTable="OPENS" msprop:Generator_RelationVarName="relationFK_OPENS_OPENS_CUSTOMER" msprop:Generator_ChildPropName="GetOPENSRows" msprop:Generator_ParentPropName="CUSTOMERRow" msprop:Generator_UserRelationName="FK_OPENS_OPENS_CUSTOMER" />
      <msdata:Relationship name="FK_OPENS_OPENS2_ACCOUNT" msdata:parent="ACCOUNT" msdata:child="OPENS" msdata:parentkey="ACCOUTNUMBER" msdata:childkey="ACCOUTNUMBER" msprop:Generator_UserParentTable="ACCOUNT" msprop:Generator_UserChildTable="OPENS" msprop:Generator_RelationVarName="relationFK_OPENS_OPENS2_ACCOUNT" msprop:Generator_ChildPropName="GetOPENSRows" msprop:Generator_ParentPropName="ACCOUNTRow" msprop:Generator_UserRelationName="FK_OPENS_OPENS2_ACCOUNT" />
      <msdata:Relationship name="FK_SERVES_SERVES_BRANCH" msdata:parent="BRANCH" msdata:child="SERVES" msdata:parentkey="BRANCHNUM" msdata:childkey="BRANCHNUM" msprop:Generator_UserParentTable="BRANCH" msprop:Generator_UserChildTable="SERVES" msprop:Generator_RelationVarName="relationFK_SERVES_SERVES_BRANCH" msprop:Generator_ChildPropName="GetSERVESRows" msprop:Generator_ParentPropName="BRANCHRow" msprop:Generator_UserRelationName="FK_SERVES_SERVES_BRANCH" />
      <msdata:Relationship name="FK_SERVES_SERVES2_CUSTOMER" msdata:parent="CUSTOMER" msdata:child="SERVES" msdata:parentkey="SSN" msdata:childkey="SSN" msprop:Generator_UserParentTable="CUSTOMER" msprop:Generator_UserChildTable="SERVES" msprop:Generator_RelationVarName="relationFK_SERVES_SERVES2_CUSTOMER" msprop:Generator_ChildPropName="GetSERVESRows" msprop:Generator_ParentPropName="CUSTOMERRow" msprop:Generator_UserRelationName="FK_SERVES_SERVES2_CUSTOMER" />
      <msdata:Relationship name="FK_TAKES_TAKES_CUSTOMER" msdata:parent="CUSTOMER" msdata:child="TAKES" msdata:parentkey="SSN" msdata:childkey="SSN" msprop:Generator_UserParentTable="CUSTOMER" msprop:Generator_UserChildTable="TAKES" msprop:Generator_RelationVarName="relationFK_TAKES_TAKES_CUSTOMER" msprop:Generator_ChildPropName="GetTAKESRows" msprop:Generator_ParentPropName="CUSTOMERRow" msprop:Generator_UserRelationName="FK_TAKES_TAKES_CUSTOMER" />
      <msdata:Relationship name="FK_TAKES_TAKES2_LOAN" msdata:parent="LOAN" msdata:child="TAKES" msdata:parentkey="LOANNUMBER" msdata:childkey="LOANNUMBER" msprop:Generator_UserParentTable="LOAN" msprop:Generator_UserChildTable="TAKES" msprop:Generator_RelationVarName="relationFK_TAKES_TAKES2_LOAN" msprop:Generator_ChildPropName="GetTAKESRows" msprop:Generator_ParentPropName="LOANRow" msprop:Generator_UserRelationName="FK_TAKES_TAKES2_LOAN" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>